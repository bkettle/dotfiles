#! /bin/python3

BRIGHTNESS_STEPS = [
        0.1, 0.2, 0.5, 1, 2, 4, 6, 8, 10, 13, 17, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100
        ]
PRECISION = 0.1

def inc_brightness(current: int) -> int:
    for i, v  in enumerate(BRIGHTNESS_STEPS):
        if v > current:
            break
    idx = min(i, len(BRIGHTNESS_STEPS) - 1)
    return BRIGHTNESS_STEPS[idx]

def dec_brightness(current: int) -> int:
    for i, v  in enumerate(BRIGHTNESS_STEPS):
        if v >= current:
            break
    idx = max(i-1, 0)
    return BRIGHTNESS_STEPS[idx]

class ArgumentError(ValueError):
    pass

if __name__ == "__main__":
    import sys
    import subprocess

    current = float(subprocess.run(["xbacklight"], capture_output=True, text=True).stdout.strip())
    print("current is", current)
    current = round(current * (1/PRECISION)) * PRECISION  # xbacklight returns weird numbers
    print("current rounded is", current)

    try:
        try:
            command = sys.argv[1]
        except:
            raise ArgumentError

        if command == "inc":
            next_brightness = inc_brightness(current)
        elif command == "dec":
            next_brightness = dec_brightness(current)
        else:
            raise ArgumentError

        subprocess.run(["xbacklight", "-set", str(next_brightness)])
        print("setting to", next_brightness)
    except ArgumentError:
        print("usage: nextbacklight inc or nextbacklight dec")


    
